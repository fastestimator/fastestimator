pipeline{
    agent any
    stages {
        stage('Build-and-Test'){
            parallel{
                stage('CPU'){
                    agent {label 'jenkinsnightly_cpu'}
                    stages{
                        stage('Build-CPU'){
                            steps{
                                sh '''
                                    cp -r ./tutorial/* ./
                                    chmod 775 -R .
                                    JENKINS_DIR=$WORKSPACE/..
                                    PATH=$JENKINS_DIR/venv/bin:/usr/local/bin:$PATH
                                    echo $WORKSPACE
                                    if [ ! -d "$JENKINS_DIR/venv"  ]; then
                                        virtualenv -p python3.6 $JENKINS_DIR/venv
                                    fi
                                    . $JENKINS_DIR/venv/bin/activate

                                    pip3 install pytest numpy nibabel pydicom tensorflow==2.0.0 ipython ipykernel scikit-image
                                    pip3 install -e .
                                '''
                            }
                        }
                        stage('Test-CPU'){
                            steps{
                               sh '''
                                    echo $WORKSPACE
                                    . $WORKSPACE/../venv/bin/activate
                                    ./test/test_apphub.sh
                                '''
                            }                           
                        }
                    }
                }

                stage('GPU'){
                    agent {label 'jenkinsnightly_gpu'}
                    stages{
                        stage('Build-GPU'){
                            steps{
                                sh '''
                                    cp -r ./tutorial/* ./
                                    chmod 775 -R .
                                    JENKINS_DIR=$WORKSPACE/..
                                    PATH=$JENKINS_DIR/venv/bin:/usr/local/bin:$PATH
                                    echo $WORKSPACE
                                    if [ ! -d "$JENKINS_DIR/venv"  ]; then
                                        virtualenv -p python3.6 $JENKINS_DIR/venv
                                    fi
                                    . $JENKINS_DIR/venv/bin/activate

                                    pip3 install pytest numpy nibabel pydicom tensorflow-gpu==2.0.0 ipython ipykernel twine scikit-image
                                    pip3 install -e .
                                '''
                            }
                        }
                        stage('Test-GPU'){
                            steps{
                                sh '''
                                    echo $WORKSPACE
                                    . $WORKSPACE/../venv/bin/activate
                                    ./test/test_apphub.sh 
                                '''
                            }                           
                        }
                    }
                }
            }
        }

        stage('Deply-pypi'){
            agent {label 'jenkinsnightly_gpu'}
            steps{
                withCredentials([string(credentialsId: 'pypi_password', variable: 'PYPI_PWD')]) {
                    
                    sh '''
                       echo hello
                       echo ${PYPI_PWD}
                        . $WORKSPACE/../venv/bin/activate
                        rm -rf dist/*
                        FASTESTIMATOR_IS_NIGHTLY=1 python setup.py sdist bdist_wheel 
                        twine upload dist/* -u fastestimatordev -p ${PYPI_PWD} 
                       
                    '''                   
                }
            }
        }

        stage('Deploy-docker'){
            agent {label 'jenkinsnightly_gpu'}
            steps{
                sh '''
                    rm -rf ./fastestimator-misc
                    git clone https://github.com/fastestimator-util/fastestimator-misc.git fastestimator-misc
                '''
                withDockerRegistry(credentialsId: 'docker-hub-credentials', url:'') {
                    sh ''' 
                        docker build -t fastestimator/fastestimator:nightly-cpu --no-cache - < fastestimator-misc/docker/nightly/Dockerfile.cpu
                        docker push fastestimator/fastestimator:nightly-cpu
                        docker build -t fastestimator/fastestimator:nightly-gpu --no-cache - < fastestimator-misc/docker/nightly/Dockerfile.gpu
                        docker push fastestimator/fastestimator:nightly-gpu
                    '''
                }
            }
        }
    }
}