pipeline{
    agent any
    stages {
        stage('Build-and-Test'){
            parallel{
                stage('CPU'){
                    agent {label 'jenkinsnightly_cpu'}
                    stages{
                        stage('Build-CPU'){
                            steps{
                                sh '''
                                    cp -r ./tutorial/* ./
                                    chmod 775 -R .

                                    if [ ! -d "/home/ubuntu/anaconda3/envs/nightly_env"  ]; then
                                        conda create --name nightly_env python=3.6 -y
                                    fi

                                    . /home/ubuntu/anaconda3/etc/profile.d/conda.sh
                                    conda activate nightly_env
                                    pip install pytest numpy nibabel pydicom tensorflow==2.0.0 ipython ipykernel scikit-image notebook
                                    pip install -e .
                                    ipython kernel install --user --name=nightly-build
                                '''
                            }
                        }
                        stage('Test-CPU'){
                            steps{
                               sh '''
                                    . /home/ubuntu/anaconda3/etc/profile.d/conda.sh
                                    conda activate nightly_env
                                    python3 test/run_nightly_build.py
                                '''
                            }
                        }
                    }
                }

                stage('GPU'){
                    agent {label 'jenkinsnightly_gpu'}
                    stages{
                        stage('Build-GPU'){
                            steps{
                                sh '''
                                    cp -r ./tutorial/* ./
                                    chmod 775 -R .

                                    if [ ! -d "/home/ubuntu/anaconda3/envs/nightly_env"  ]; then
                                        conda create --name nightly_env python=3.6 -y
                                    fi

                                    . /home/ubuntu/anaconda3/etc/profile.d/conda.sh
                                    conda activate nightly_env
                                    pip install pytest numpy nibabel pydicom tensorflow-gpu==2.0.0 ipython ipykernel twine scikit-image notebook
                                    pip install -e .
                                    ipython kernel install --user --name=nightly-build
                                '''
                            }
                        }
                        stage('Test-GPU'){
                            steps{
                                sh '''
                                    . /home/ubuntu/anaconda3/etc/profile.d/conda.sh
                                    conda activate nightly_env
                                    python3 test/run_nightly_build.py
                                '''
                            }
                        }
                    }
                }
            }
        }

        stage('Deply-pypi'){
            agent {label 'jenkinsnightly_gpu'}
            steps{
                withCredentials([string(credentialsId: 'pypi_password', variable: 'PYPI_PWD')]) {

                    sh '''
                        . /home/ubuntu/anaconda3/etc/profile.d/conda.sh
                        conda activate nightly_env
                        rm -rf dist/*
                        FASTESTIMATOR_IS_NIGHTLY=1 python setup.py sdist bdist_wheel
                        twine upload dist/* -u fastestimatordev -p ${PYPI_PWD}

                    '''
                }
            }
        }

        stage('Deploy-docker'){
            agent {label 'jenkinsnightly_gpu'}
            steps{
                sh '''
                    rm -rf ./fastestimator-misc
                    git clone https://github.com/fastestimator-util/fastestimator-misc.git fastestimator-misc
                '''
                withDockerRegistry(credentialsId: 'docker-hub-credentials', url:'') {
                    sh '''
                        docker build -t fastestimator/fastestimator:nightly-cpu --no-cache - < fastestimator-misc/docker/nightly/Dockerfile.cpu
                        docker push fastestimator/fastestimator:nightly-cpu
                        docker build -t fastestimator/fastestimator:nightly-gpu --no-cache - < fastestimator-misc/docker/nightly/Dockerfile.gpu
                        docker push fastestimator/fastestimator:nightly-gpu
                    '''
                }
            }
        }
    }
}